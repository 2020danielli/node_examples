#!/usr/bin/nodejs

// -------------- load packages -------------- //
var express = require('express');
var path = require('path');
var hbs = require('hbs');
var cookieSession = require('cookie-session')
var simpleoauth2 = require('simple-oauth2');
var request = require('request');
var fileUpload = require('express-fileupload');
var bodyParser = require('body-parser')
var dateFormat = require('dateformat')

// custom packages
var flowers = require('./serverJS/flowers.js')
var secrets = require('../private/serverJS/secrets.js')

var app = express();

// -------------- express initialization -------------- //
app.set('port', process.env.PORT || 8080 );         // set port for TJHSST
app.set('view engine', 'hbs');                      // handlebars (for templating)

// -------------- fileUpload setup -------------- //
app.use(fileUpload(
    {limits: { fileSize: 10 * 1024* 1024}}
));

// -------------- multer setup -------------- //
// var upload = multer({dest: __dirname});


// -------------- bodyParser setup -------------- //
app.use(bodyParser.urlencoded({ extended: false})); 
app.use(bodyParser.json())


// -------------- cookie setup -------------- //
app.set('trust proxy', 1) // trust first proxy 
app.use(cookieSession({
  name: 'cv_auth',
  keys: [secrets.session_key_1, secrets.session_key_2]
}))

// -------------- oauth2 setup -------------- //
var ion_client_id     = secrets.ion_client_id;
var ion_client_secret = secrets.ion_client_secret;
var ion_redirect_uri  = 'https://user.tjhsst.edu/cvupload/process_login';

var oauth2 = simpleoauth2.create({
  client: {
    id:     ion_client_id,
    secret: ion_client_secret,
  },
  auth: {
    tokenHost:     'https://ion.tjhsst.edu/oauth/',
    authorizePath: 'https://ion.tjhsst.edu/oauth/authorize',
    tokenPath:     'https://ion.tjhsst.edu/oauth/token/'
  }
});

var authorizationUri = oauth2.authorizationCode.authorizeURL({
    scope: "read",
    redirect_uri: ion_redirect_uri
});


// -------------- serve static folders -------------- //
app.use('/js',  express.static(path.join(__dirname, 'js')))
app.use('/css', express.static(path.join(__dirname, 'css')))


// -------------- express 'get' handlers -------------- //
app.get('/', function(req, res){
    
    // proceeed if there is a session token
    if (typeof req.session.token != 'undefined') {

        // Construct an ion api request        
        var access_token   = req.session.token.token.access_token;
        var my_ion_request = 'https://ion.tjhsst.edu/api/profile?format=json&access_token='+access_token;

        // Perform the asyncrounous request ...
        request.get( {url:my_ion_request}, function (e, r, body) {
            var res_object = JSON.parse(body);
            var user_name  = res_object['short_name'];
            var uid        = res_object['id'];

            req.session.user_name = user_name;
            req.session.uid       = uid;

            feed_dict = {
                logged_in  : true,
                user_name : user_name,
                flowers   : flowers.labels
            }
            res.render('index', feed_dict);
        })
    } else {
        // ... if the user has not logged in, we'll send them back to the index
        feed_dict = {
            logged_in  : false,
            login_link : authorizationUri
        }
        res.render('index', feed_dict);
    }

});

// FORM HANDLER
app.post('/process_form', function(req, res){
    console.log('1');
    if (!req.files) {
        console.log('2');
        return res.status(400).send('no file uploaded');
    }
    
    console.log(req.session.uid);
    
    var image_file      = req.files.image_file;
    var image_file_name = req.files.image_file.name;
    var image_file_ext  = path.extname(image_file_name);

    var image_class = req.body.image_class;

    // collision resistant filename
    var now         = new Date();
    var date_stamp  = dateFormat(now, 'yymmdd_HHMMss');    
    var file_string = 'date_' + date_stamp + '_uid_' + req.session.uid + image_file_ext; 
    image_file_path = path.join(__dirname, 'images', image_class, file_string );
    
    // THE FILE NAME IS THE DATESTAMP PLUS THE USER ID
    console.log(image_file_path);
    
    image_file.mv( image_file_path, function(err) {
        if (err)
          return res.status(500).send(err);
     
        res.send('success');
    });
})


// LOGOUT FUNCTION
app.get('/logout', function(req, res){
    req.session = null;
    res.redirect('https://user.tjhsst.edu/cvupload');
})

// HIDDEN LOGIN INTERMEDIARY
app.get('/process_login', function (req, res, next) {
    // require redirect with code    
    if (typeof req.query.code != 'undefined') {

        // This code was generated by ION.
        var theCode = req.query.code 

        var options = {
            code: theCode,
            redirect_uri: ion_redirect_uri
         };

        // This token will be passed back to ion to request a token.
        oauth2.authorizationCode.getToken(options, function (error, result) {

            // If there was an error generating the token, 
            if (error) {
                console.log(error);
                return res.send('Authentication failed');
            }

            // create token and then attach to cookie
            var token = oauth2.accessToken.create(result);
            req.session.token = token;

            // success! redirect
            res.redirect('https://user.tjhsst.edu/cvupload');

        });
    } else {
        // We're here because there was no code defined in the request.
        res.redirect('https://user.tjhsst.edu/cvupload');
    }
})
// -------------- listener -------------- //
// The listener is what keeps node 'alive.' 
var listener = app.listen(app.get('port'), function() {
  console.log( 'Express server started on port: '+listener.address().port );
});